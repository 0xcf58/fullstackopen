browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/spa
server-->browser: HTML-code
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/main.css
server-->browser: main.css
browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/spa.js
server-->browser: spa.js

note over browser:
browser starts running spa.js, 
grabs data.json from server
end note

browser->server: HTTP GET https://studies.cs.helsinki.fi/exampleapp/data.json
server-->browser: [{ content: "hello, world!", date: "2022-05-25" }, ...]

note over browser:
user filled out form and clicked
submit. now running redrawNotes()
from spa.js adding a new link element
to the DOM.

submission to server occurs after
rendering the new data. When the SPA
was first loaded, the event handler for
'onsubmit' was registered for the 'notes_form'
element. 
end note

note over browser:
stringified JSON payload with content and date
end note

note over server:
add payload to data.json
end note

browser->server: HTTP POST https://studies.cs.helsinki.fi/exampleapp/new_note_spa
